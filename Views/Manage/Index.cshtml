@using CarMessenger.Models
@model CarMessenger.Models.IndexViewModel

@{
    ViewBag.Title = "Manage your account";

    var maxOwnedLimit = 100;
    var maxCoOwnedLimit = 100;

    var ownedCars = ViewBag.OwnedCars as List<CarModel>;
    var coOwnedCars = ViewBag.CoOwnedCars as List<CarModel>;
    var carRequests = ViewBag.Requests as List<CarModel>;
    var carInvitations = ViewBag.Invitations as List<CarModel>;
}

<div class="d-flex w-100 justify-content-center">
    <div class="col-sm-10 col-md-8">
        <div class="main-bg">
            <h2 class="main-header">@ViewBag.Title</h2>

            <div class="d-flex justify-content-center">
                <ul class="p-0 pt-3 pb-3 w-100 list-hover">
                    <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                        <span class="font-weight-bold">Nickname:</span>
                        <span class="align-center">
                            <text id="Nickname">@Model.Nickname</text>
                            <button class="btn btn-warning p-0 pr-1 pl-1 ml-2 mb-1 mt-1">@Html.ActionLink("Change", "ChangeNickname", null, new { Style = "color:White; text-decoration: none;" }) </button>
                        </span>
                    </li>


                    <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                        <span class="font-weight-bold">Password:</span>
                        <span>
                            @if (Model.HasPassword)
                            {
                                <button class="btn btn-warning p-0 pr-1 pl-1 mb-1 mt-1 float-right">@Html.ActionLink("Change", "ChangePassword", null, new { Style = "color:White; text-decoration: none;" }) </button>
                            }
                            else
                            {
                                <button class="btn btn-success p-0 pr-1 pl-1 mb-1 mt-1 float-right">@Html.ActionLink("Create", "SetPassword", null, new { Style = "color:White; text-decoration: none;" }) </button>
                            }
                        </span>
                    </li>
        @*<dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>*@
                    @*
        Phone Numbers can used as a second factor of verification in a two-factor authentication system.

         See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
            for details on setting up this ASP.NET application to support two-factor authentication using SMS.

         Uncomment the following block after you have set up two-factor authentication
                    *@

                    @*<dt>Phone Number:</dt>
        <dd>
            @(Model.PhoneNumber ?? "None")
            @if (Model.PhoneNumber != null)
            {
                <br />
                <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                }
            }
            else
            {
                <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber") ]</text>
            }
        </dd>*@

                    <!--<dt>Two-Factor Authentication:</dt>
    <dd>
        <p>
            There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
            for details on setting up this ASP.NET application to support two-factor authentication.
        </p>-->
                    @*@if (Model.TwoFactor)
        {
            using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <text>Enabled
                <input type="submit" value="Disable" class="btn btn-link" />
                </text>
            }
        }
        else
        {
            using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <text>Disabled
                <input type="submit" value="Enable" class="btn btn-link" />
                </text>
            }
        }*@
                    <!--</dd>-->
                    @*<dt>Plate Number:</dt>
        <dd>
            @(Model.PlateNumber ?? "None")
            @if (Model.PhoneNumber != null)
            {
                <br />
                <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                }
            }
            else
            {
                <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber") ]</text>
            }
        </dd>*@

                    <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                        <span class="font-weight-bold">
                            Owned Cars (@(ownedCars?.Count() ?? 0)/@(Model.MaxOwned))
                        </span>
                        <span>
                            <ul>
                                @if (ViewBag.OwnedCars != null)
                                {
                                    foreach (var car in ownedCars)
                                    {
                                        <li id="c_@car.Id" class="d-flex align-items-center justify-content-between Owned">
                                            <text class="align-center name"> (<text class="CountryCode">@car.CountryCode</text>) <text class="Plate">@car.Plate</text> </text>
                                            <button class="btn btn-info p-0 pr-1 pl-1 mb-1 mt-1 ml-2">@Html.ActionLink("Details", "../Cars/Details/" + car.Id, null, new { Style = "color:White; text-decoration: none;" }) </button>
                                        </li>
                                    }
                                }
                            </ul>
                            @if ((ownedCars?.Count() ?? 0) < maxOwnedLimit)
                            {
                                if ((ownedCars?.Count() ?? 0) < Model.MaxOwned)
                                {
                                    <button class="btn btn-success p-0 pr-1 pl-1 mb-1 mt-1 float-right">@Html.ActionLink("Add Car", "../Cars/Create", null, new { Style = "color:White; text-decoration: none;" }) </button>
                                }
                                else
                                {
                                    <button class="btn btn-success p-0 pr-1 pl-1 mb-1 mt-1 float-right">@Html.ActionLink("Increase Owned Car Limit", "IncreaseOwnedCarLimit", null, new { Style = "color:White; text-decoration: none;" }) </button>

                                }
                            }
                        </span>
                    </li>

                    <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                        <span class="font-weight-bold">
                            CoOwned Cars (@(coOwnedCars?.Count() ?? 0)/@(Model.MaxCoOwned))
                        </span>
                        <span>
                            @if ((coOwnedCars?.Count() ?? 0) >= (Model.MaxCoOwned))
                            {
                                if ((coOwnedCars?.Count() ?? 0) < maxCoOwnedLimit)
                                {
                                }
                            }
                            <ul>
                                @if (ViewBag.CoOwnedCars != null)
                                {
                                    foreach (var car in coOwnedCars)
                                    {
                                        <li id="c_@car.Id" class="d-flex align-items-center justify-content-between CoOwned">
                                            <text class="align-center name"> (<text class="CountryCode">@car.CountryCode</text>) <text class="Plate">@car.Plate</text> </text>
                                            <button class="btn btn-info p-0 pr-1 pl-1 mb-1 mt-1 ml-2">@Html.ActionLink("Details", "../Cars/Details/" + car.Id, null, new { Style = "color:White; text-decoration: none;" }) </button>
                                        </li>
                                    }
                                }
                            </ul>

                            @if ((coOwnedCars?.Count() ?? 0) < maxCoOwnedLimit)
                            {
                                if ((coOwnedCars?.Count() ?? 0) < Model.MaxCoOwned)
                                {
                                    <button class="btn btn-success p-0 pr-1 pl-1 mb-1 mt-1 float-right">@Html.ActionLink("Request Car", "../Cars/RequestCoOwner", null, new { Style = "color:White; text-decoration: none;" }) </button>
                                }
                                else
                                {
                                    <button class="btn btn-success p-0 pr-1 pl-1 mb-1 mt-1 float-right">@Html.ActionLink("Increase CoOwned Car Limit", "IncreaseCoOwnedCarLimit", null, new { Style = "color:White; text-decoration: none;" }) </button>

                                }
                            }
                        </span>
                    </li>

                    <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                        <span class="font-weight-bold">Pending Requests:</span>
                        <span>
                            <ul>
                                @if (ViewBag.Requests != null)
                                {
                                    foreach (var car in carRequests)
                                    {
                                        <li id="c_@car.Id" class="d-flex align-items-center justify-content-between Request">
                                            <text class="align-center name"> (<text class="CountryCode">@car.CountryCode</text>) <text class="Plate">@car.Plate</text> </text>
                                            <button class="btn btn-danger p-0 pr-1 pl-1 mb-1 mt-1 ml-1">@Html.ActionLink("Remove", "../Cars/Delete", new { id = car.Id }, new { Style = "color:White; text-decoration: none;" }) </button>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <text>No Pending Requests</text>
                                }
                            </ul>
                        </span>
                    </li>

                    <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                        <span class="font-weight-bold">Pending Invitations:</span>
                        <span>
                            <ul>
                                @if (ViewBag.Invitations != null)
                                {
                                    foreach (var car in carInvitations)
                                    {
                                        <li id="c_@car.Id" class="d-flex align-items-center justify-content-between Invitation">
                                            <text class="align-center name"> (<text class="CountryCode">@car.CountryCode</text>) <text class="Plate">@car.Plate</text> </text>
                                            <button class="btn btn-success p-0 pr-1 pl-1 mb-1 mt-1 ml-1">@Html.ActionLink("Accept", "../Cars/AcceptInvite", new { id = car.Id }, new { Style = "color:White; text-decoration: none;" }) </button>
                                            <button class="btn btn-danger p-0 pr-1 pl-1 mb-1 mt-1">@Html.ActionLink("Reject", "../Cars/Delete", new { id = car.Id }, new { Style = "color:White; text-decoration: none;" }) </button>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <text>No Pending Invitations</text>
                                }
                            </ul>
                        </span>
                    </li>
                    
                    @if (User.IsInRole("Admin"))
                    {
                        <li class="d-flex justify-content-between p-1 pl-3 pr-3">
                            <button class="btn btn-primary"> @Html.ActionLink("All Cars", "../Cars", null, new { Style = "color:White; text-decoration: none;" }) </button>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<!--Script references. -->
<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<!--Add script to update the page and send messages.-->
<script type="text/javascript">
    var _selectedChatId = undefined;

    function getCarPlate(headId) {
        return $("#" + headId + " .carPlate")[0].innerHTML;
    }

    $(document).ready(function () {
        // all server functions have the first letter lowered

        // Declare a proxy to reference the hub.
        var hub = $.connection.carHub;

        hub.client.UpdateNickname = function (newNick) {
            $('#Nickname')[0].innerHTML = newNick;
        }
        hub.client.AddOwnedCar = function (car) {
            //console.log("add car", car)
            hub.server.joinNewCar(car.Id);
        }
        hub.client.AddCoOwnedCar = function (car) {
            //console.log("add car", car)
            hub.server.joinNewCar(car.Id);
        }
        hub.client.AddInvitation = function (invitation) {
            //console.log("add invitation", invitation)
        }
        hub.client.AddRequest = function (request) {
            //console.log("add request", request)
        }
        hub.client.RemoveStatus = function (carId) {
            var status = $('#c_' + carId);

            var warningMsgEl = $(
                '<div class="alert alert-warning col-sm-10 col-md-8"> \
                    <span class="closebtn" onclick="this.parentElement.style.display=\'none\';">&times;</span> \
                    <strong>Well... </strong> '
                + (
                    status.hasClass('Owned') ? 'Your Owned Car "' :
                        status.hasClass('CoOwned') ? 'Your CoOwned Car "' :
                            status.hasClass('Request') ? 'Your Request "' :
                                status.hasClass('Invitation') ? 'Your Invitation "' :
                                    '"'
                    )
                + status.find('.name')[0].innerHTML
                + '" was removed</div>')[0];

            status.remove();
            $('#Msgs')[0].append(warningMsgEl);

            hub.server.RemoveCar(carId);
        }

        // Start the connection.
        $.connection.hub.start().done(function () {

            //hub.server.joinMyNotification();
            //hub.server.joinMyCars();
        });
    });
</script>
